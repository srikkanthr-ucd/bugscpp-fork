```cpp
inline void LinkReferences::visit(Reference& ope) {
    // Check if the reference is a macro parameter
    auto found_param = false;
    for (auto const& param: params_) {
        if (param == ope.name_) {
            ope.iarg_ = std::find(params_.begin(), params_.end(), param) - params_.begin();
            found_param = true;
            break;
        }
    }

    // If the reference is not a macro parameter, then check if it is a definition rule
    if (!found_param) {
        if (!grammar_.count(ope.name_)) {
            grammar_.emplace(ope.name_, ope);
        } else {
            if (grammar_[ope.name_].args_ != ope.args_) {
                throw std::runtime_error("Multiple definitions of rule " + ope.name_ + " found in the grammar with the same argument lists.");
            }
        }
    }

    for (auto arg: ope.args_) {
        arg->accept(*this);
    }
}
```