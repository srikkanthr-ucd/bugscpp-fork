You are a automated program repair tool for C and C++. Your task is to provide a fix for the buggy function below.

<<< Buggy Function:
uint32 TIFFNumberOfStrips(TIFF* tif)
{
	TIFFDirectory *td = &tif->tif_dir;
	uint32 nstrips;

    /* If the value was already computed and store in td_nstrips, then return it,
       since ChopUpSingleUncompressedStrip might have altered and resized the
       since the td_stripbytecount and td_stripoffset arrays to the new value
       after the initial affectation of td_nstrips = TIFFNumberOfStrips() in
       tif_dirread.c ~line 3612.
       See http://bugzilla.maptools.org/show_bug.cgi?id=2587 */

	nstrips = (td->td_rowsperstrip == (uint32) -1 ? 1 :
	     TIFFhowmany_32(td->td_imagelength, td->td_rowsperstrip));
	if (td->td_planarconfig == PLANARCONFIG_SEPARATE)
		nstrips = _TIFFMultiply32(tif, nstrips, (uint32)td->td_samplesperpixel,
		    "TIFFNumberOfStrips");
	return (nstrips);
}

>>>

The following was the errors outputted by a failed test case.

<<< Test Failed Log:
TIFFReadDirectoryCheckOrder: Warning, Invalid TIFF directory; tags are not sorted in ascending order.
TIFFReadDirectory: Warning, Unknown field with tag 12336 (0x3030) encountered.

>>>

The function provided by you is still not correct! Your repaired function is:

<<< Function Repaired By You:
uint32 TIFFNumberOfStrips(TIFF* tif)
{
	TIFFDirectory *td = &tif->tif_dir;
	uint32 nstrips;

	if (td->td_rowsperstrip == (uint32) -1) {

		/* td_rowsperstrip is unknown: therefore, a single
		   strip must be created */
		nstrips = 1;

	}
	else {

		/* Compute the number of strips using the value of
		   td_rowsperstrip and  the length of the image */

		uint32 rows_per_strip = td->td_rowsperstrip;
		nstrips = TIFFhowmany_32(td->td_imagelength, rows_per_strip);

		/* In case of an error, just return 1; the issue will
		   be detected at a later point */

		if (nstrips == (uint32) -1) {
			TIFFErrorExt(tif->tif_clientdata,
				     tif->tif_name,
				     "TIFFNumberOfStrips: division overflow");
			TIFFSetField(tif,
				     TIFFTAG_IMAGEDIMENSIONS,
				     0, 0);
			return 1;
		}
	}

	if (td->td_planarconfig == PLANARCONFIG_CONTIG && td->td_samplesperpixel > 1)
		nstrips *= td->td_samplesperpixel;
	return (nstrips);
}


>>>

That function has the following compiliation error:

<<< Compliation Error:
mv -f .deps/tif_read.Tpo .deps/tif_read.Plo
/bin/bash ../libtool  --tag=CC   --mode=compile gcc -DHAVE_CONFIG_H -I.     -g -O2 -Wall -W -MT tif_strip.lo -MD -MP -MF .deps/tif_strip.Tpo -c -o tif_strip.lo tif_strip.c
libtool: compile:  gcc -DHAVE_CONFIG_H -I. -g -O2 -Wall -W -MT tif_strip.lo -MD -MP -MF .deps/tif_strip.Tpo -c tif_strip.c  -fPIC -DPIC -o .libs/tif_strip.o
tif_strip.c: In function 'TIFFNumberOfStrips':
tif_strip.c:88:10: error: 'TIFFTAG_IMAGEDIMENSIONS' undeclared (first use in this function); did you mean 'FIELD_IMAGEDIMENSIONS'?
   88 |          TIFFTAG_IMAGEDIMENSIONS,
      |          ^~~~~~~~~~~~~~~~~~~~~~~
      |          FIELD_IMAGEDIMENSIONS
tif_strip.c:88:10: note: each undeclared identifier is reported only once for each function it appears in
make[2]: Leaving directory '/home/workspace/libtiff'
make[2]: *** [Makefile:699: tif_strip.lo] Error 1
make[1]: *** [Makefile:518: all] Error 2
make[1]: Leaving directory '/home/workspace/libtiff'
make: *** [Makefile:547: all-recursive] Error 1

>>>

You will only respond with your repaired function in a code snippet as below:
```
<Your repaired function>
```
