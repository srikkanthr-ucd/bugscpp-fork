[cpp_peglib] start building
  Starting container
    Image: hschoe/defects4cpp-ubuntu:cpp_peglib

-- The C compiler identification is GNU 7.5.0
-- The CXX compiler identification is GNU 7.5.0
-- Detecting C compiler ABI info
-- Detecting C compiler ABI info - done
-- Check for working C compiler: /usr/bin/cc - skipped
-- Detecting C compile features
-- Detecting C compile features - done
-- Detecting CXX compiler ABI info
-- Detecting CXX compiler ABI info - done
-- Check for working CXX compiler: /usr/bin/c++ - skipped
-- Detecting CXX compile features
-- Detecting CXX compile features - done
CMake Deprecation Warning at test/CMakeLists.txt:1 (cmake_minimum_required):
  Compatibility with CMake < 2.8.12 will be removed from a future version of
  CMake.

  Update the VERSION argument <min> value or use a ...<max> suffix to tell
  CMake that the project does not need compatibility with older versions.


CMake Deprecation Warning at example/CMakeLists.txt:1 (cmake_minimum_required):
  Compatibility with CMake < 2.8.12 will be removed from a future version of
  CMake.

  Update the VERSION argument <min> value or use a ...<max> suffix to tell
  CMake that the project does not need compatibility with older versions.


-- Configuring done
-- Generating done
-- Build files have been written to: /home/workspace/build

[ 12%] Building CXX object test/CMakeFiles/test-main.dir/test.cc.o
In file included from /home/workspace/test/test.cc:5:0:
/home/workspace/test/../peglib.h: In member function 'virtual void peg::LinkReferences::visit(peg::Reference&)':
/home/workspace/test/../peglib.h:2503:36: error: 'std::unordered_map<std::__cxx11::basic_string<char>, peg::Definition>::mapped_type {aka class peg::Definition}' has no member named 'args_'
     } else if (grammar_[ope.name_].args_.size() != ope.args_.size()) {
                                    ^~~~~
/home/workspace/test/../peglib.h:2507:31: error: 'using element_type = class peg::Ope {aka class peg::Ope}' has no member named 'getType'
             if (ope.args_[i]->getType() == Node::Type::Reference) {
                               ^~~~~~~
/home/workspace/test/../peglib.h:2507:44: error: 'Node' has not been declared
             if (ope.args_[i]->getType() == Node::Type::Reference) {
                                            ^~~~
/home/workspace/test/../peglib.h:2508:77: error: 'using element_type = class peg::Reference {aka class peg::Reference}' has no member named 'getText'
                 if (std::static_pointer_cast<peg::Reference>(ope.args_[i])->getText() != std::static_pointer_cast<peg::Reference>(grammar_[ope.name_].args_[i])->getText()) {
                                                                             ^~~~~~~
/home/workspace/test/../peglib.h:2508:151: error: 'std::unordered_map<std::__cxx11::basic_string<char>, peg::Definition>::mapped_type {aka class peg::Definition}' has no member named 'args_'
                 if (std::static_pointer_cast<peg::Reference>(ope.args_[i])->getText() != std::static_pointer_cast<peg::Reference>(grammar_[ope.name_].args_[i])->getText()) {
                                                                                                                                                       ^~~~~
In file included from /usr/include/x86_64-linux-gnu/c++/7/bits/c++allocator.h:33:0,
                 from /usr/include/c++/7/bits/allocator.h:46,
                 from /usr/include/c++/7/string:41,
                 from /home/workspace/test/catch.hh:251,
                 from /home/workspace/test/test.cc:3:
/usr/include/c++/7/ext/new_allocator.h: In instantiation of 'void __gnu_cxx::new_allocator<_Tp>::construct(_Up*, _Args&& ...) [with _Up = std::pair<const std::__cxx11::basic_string<char>, peg::Definition>; _Args = {const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, peg::Reference&}; _Tp = std::pair<const std::__cxx11::basic_string<char>, peg::Definition>]':
/usr/include/c++/7/bits/alloc_traits.h:475:4:   required from 'static void std::allocator_traits<std::allocator<_CharT> >::construct(std::allocator_traits<std::allocator<_CharT> >::allocator_type&, _Up*, _Args&& ...) [with _Up = std::pair<const std::__cxx11::basic_string<char>, peg::Definition>; _Args = {const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, peg::Reference&}; _Tp = std::pair<const std::__cxx11::basic_string<char>, peg::Definition>; std::allocator_traits<std::allocator<_CharT> >::allocator_type = std::allocator<std::pair<const std::__cxx11::basic_string<char>, peg::Definition> >]'
/usr/include/c++/7/bits/hashtable_policy.h:2066:37:   required from 'std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_type* std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_allocate_node(_Args&& ...) [with _Args = {const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, peg::Reference&}; _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, peg::Definition>, true> >; std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_type = std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, peg::Definition>, true>]'
/usr/include/c++/7/bits/hashtable.h:1644:15:   required from 'std::pair<typename std::__detail::_Hashtable_base<_Key, _Value, _ExtractKey, _Equal, _H1, _H2, _Hash, _Traits>::iterator, bool> std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::_M_emplace(std::true_type, _Args&& ...) [with _Args = {const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, peg::Reference&}; _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, peg::Definition>; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, peg::Definition> >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _H1 = std::hash<std::__cxx11::basic_string<char> >; _H2 = std::__detail::_Mod_range_hashing; _Hash = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>; typename std::__detail::_Hashtable_base<_Key, _Value, _ExtractKey, _Equal, _H1, _H2, _Hash, _Traits>::iterator = std::__detail::_Node_iterator<std::pair<const std::__cxx11::basic_string<char>, peg::Definition>, false, true>; std::true_type = std::integral_constant<bool, true>]'
/usr/include/c++/7/bits/hashtable.h:736:21:   required from 'std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::__ireturn_type std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::emplace(_Args&& ...) [with _Args = {const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, peg::Reference&}; _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, peg::Definition>; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, peg::Definition> >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _H1 = std::hash<std::__cxx11::basic_string<char> >; _H2 = std::__detail::_Mod_range_hashing; _Hash = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>; std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::__ireturn_type = std::pair<std::__detail::_Node_iterator<std::pair<const std::__cxx11::basic_string<char>, peg::Definition>, false, true>, bool>]'
/usr/include/c++/7/bits/unordered_map.h:387:54:   required from 'std::pair<typename std::_Hashtable<_Key, std::pair<const _Key, _Tp>, _Alloc, std::__detail::_Select1st, _Pred, _Hash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<std::__not_<std::__and_<std::__is_fast_hash<_Hash>, std::__detail::__is_noexcept_hash<_Key, _Hash> > >::value, false, true> >::iterator, bool> std::unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>::emplace(_Args&& ...) [with _Args = {const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, peg::Reference&}; _Key = std::__cxx11::basic_string<char>; _Tp = peg::Definition; _Hash = std::hash<std::__cxx11::basic_string<char> >; _Pred = std::equal_to<std::__cxx11::basic_string<char> >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, peg::Definition> >; typename std::_Hashtable<_Key, std::pair<const _Key, _Tp>, _Alloc, std::__detail::_Select1st, _Pred, _Hash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<std::__not_<std::__and_<std::__is_fast_hash<_Hash>, std::__detail::__is_noexcept_hash<_Key, _Hash> > >::value, false, true> >::iterator = std::__detail::_Node_iterator<std::pair<const std::__cxx11::basic_string<char>, peg::Definition>, false, true>]'
/home/workspace/test/../peglib.h:2502:40:   required from here
/usr/include/c++/7/ext/new_allocator.h:136:4: error: no matching function for call to 'std::pair<const std::__cxx11::basic_string<char>, peg::Definition>::pair(const std::__cxx11::basic_string<char>&, peg::Reference&)'
  { ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/include/c++/7/bits/stl_algobase.h:64:0,
                 from /usr/include/c++/7/bits/char_traits.h:39,
                 from /usr/include/c++/7/string:40,
                 from /home/workspace/test/catch.hh:251,
                 from /home/workspace/test/test.cc:3:
/usr/include/c++/7/bits/stl_pair.h:436:9: note: candidate: template<class ... _Args1, long unsigned int ..._Indexes1, class ... _Args2, long unsigned int ..._Indexes2> std::pair<_T1, _T2>::pair(std::tuple<_Args1 ...>&, std::tuple<_Args2 ...>&, std::_Index_tuple<_Indexes1 ...>, std::_Index_tuple<_Indexes2 ...>)
         pair(tuple<_Args1...>&, tuple<_Args2...>&,
         ^~~~
/usr/include/c++/7/bits/stl_pair.h:436:9: note:   template argument deduction/substitution failed:
In file included from /usr/include/x86_64-linux-gnu/c++/7/bits/c++allocator.h:33:0,
                 from /usr/include/c++/7/bits/allocator.h:46,
                 from /usr/include/c++/7/string:41,
                 from /home/workspace/test/catch.hh:251,
                 from /home/workspace/test/test.cc:3:
/usr/include/c++/7/ext/new_allocator.h:136:4: note:   types 'std::tuple<_Tps ...>' and 'const std::__cxx11::basic_string<char>' have incompatible cv-qualifiers
  { ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/include/c++/7/bits/stl_algobase.h:64:0,
                 from /usr/include/c++/7/bits/char_traits.h:39,
                 from /usr/include/c++/7/string:40,
                 from /home/workspace/test/catch.hh:251,
                 from /home/workspace/test/test.cc:3:
/usr/include/c++/7/bits/stl_pair.h:375:9: note: candidate: template<class ... _Args1, class ... _Args2> std::pair<_T1, _T2>::pair(std::piecewise_construct_t, std::tuple<_Args1 ...>, std::tuple<_Args2 ...>)
         pair(piecewise_construct_t, tuple<_Args1...>, tuple<_Args2...>);
         ^~~~
/usr/include/c++/7/bits/stl_pair.h:375:9: note:   template argument deduction/substitution failed:
In file included from /usr/include/x86_64-linux-gnu/c++/7/bits/c++allocator.h:33:0,
                 from /usr/include/c++/7/bits/allocator.h:46,
                 from /usr/include/c++/7/string:41,
                 from /home/workspace/test/catch.hh:251,
                 from /home/workspace/test/test.cc:3:
/usr/include/c++/7/ext/new_allocator.h:136:4: note:   'peg::Reference' is not derived from 'std::tuple<_Tps ...>'
  { ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/include/c++/7/bits/stl_algobase.h:64:0,
                 from /usr/include/c++/7/bits/char_traits.h:39,
                 from /usr/include/c++/7/string:40,
                 from /home/workspace/test/catch.hh:251,
                 from /home/workspace/test/test.cc:3:
/usr/include/c++/7/bits/stl_pair.h:370:21: note: candidate: template<class _U1, class _U2, typename std::enable_if<(std::_PCC<((! std::is_same<const std::__cxx11::basic_string<char>, _U1>::value) || (! std::is_same<peg::Definition, _U2>::value)), const std::__cxx11::basic_string<char>, peg::Definition>::_MoveConstructiblePair<_U1, _U2>() && (! std::_PCC<((! std::is_same<const std::__cxx11::basic_string<char>, _U1>::value) || (! std::is_same<peg::Definition, _U2>::value)), const std::__cxx11::basic_string<char>, peg::Definition>::_ImplicitlyMoveConvertiblePair<_U1, _U2>())), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(std::pair<_U1, _U2>&&)
  explicit constexpr pair(pair<_U1, _U2>&& __p)
                     ^~~~
/usr/include/c++/7/bits/stl_pair.h:370:21: note:   template argument deduction/substitution failed:
In file included from /usr/include/x86_64-linux-gnu/c++/7/bits/c++allocator.h:33:0,
                 from /usr/include/c++/7/bits/allocator.h:46,
                 from /usr/include/c++/7/string:41,
                 from /home/workspace/test/catch.hh:251,
                 from /home/workspace/test/test.cc:3:
/usr/include/c++/7/ext/new_allocator.h:136:4: note:   types 'std::pair<_T1, _T2>' and 'const std::__cxx11::basic_string<char>' have incompatible cv-qualifiers
  { ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/include/c++/7/bits/stl_algobase.h:64:0,
                 from /usr/include/c++/7/bits/char_traits.h:39,
                 from /usr/include/c++/7/string:40,
                 from /home/workspace/test/catch.hh:251,
                 from /home/workspace/test/test.cc:3:
/usr/include/c++/7/bits/stl_pair.h:360:12: note: candidate: template<class _U1, class _U2, typename std::enable_if<(std::_PCC<((! std::is_same<const std::__cxx11::basic_string<char>, _U1>::value) || (! std::is_same<peg::Definition, _U2>::value)), const std::__cxx11::basic_string<char>, peg::Definition>::_MoveConstructiblePair<_U1, _U2>() && std::_PCC<((! std::is_same<const std::__cxx11::basic_string<char>, _U1>::value) || (! std::is_same<peg::Definition, _U2>::value)), const std::__cxx11::basic_string<char>, peg::Definition>::_ImplicitlyMoveConvertiblePair<_U1, _U2>()), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(std::pair<_U1, _U2>&&)
  constexpr pair(pair<_U1, _U2>&& __p)
            ^~~~
/usr/include/c++/7/bits/stl_pair.h:360:12: note:   template argument deduction/substitution failed:
In file included from /usr/include/x86_64-linux-gnu/c++/7/bits/c++allocator.h:33:0,
                 from /usr/include/c++/7/bits/allocator.h:46,
                 from /usr/include/c++/7/string:41,
                 from /home/workspace/test/catch.hh:251,
                 from /home/workspace/test/test.cc:3:
/usr/include/c++/7/ext/new_allocator.h:136:4: note:   types 'std::pair<_T1, _T2>' and 'const std::__cxx11::basic_string<char>' have incompatible cv-qualifiers
  { ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/include/c++/7/bits/stl_algobase.h:64:0,
                 from /usr/include/c++/7/bits/char_traits.h:39,
                 from /usr/include/c++/7/string:40,
                 from /home/workspace/test/catch.hh:251,
                 from /home/workspace/test/test.cc:3:
/usr/include/c++/7/bits/stl_pair.h:350:21: note: candidate: template<class _U1, class _U2, typename std::enable_if<(_MoveConstructiblePair<_U1, _U2>() && (! _ImplicitlyMoveConvertiblePair<_U1, _U2>())), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(_U1&&, _U2&&)
  explicit constexpr pair(_U1&& __x, _U2&& __y)
                     ^~~~
/usr/include/c++/7/bits/stl_pair.h:350:21: note:   template argument deduction/substitution failed:
/usr/include/c++/7/bits/stl_pair.h:349:38: error: no type named 'type' in 'struct std::enable_if<false, bool>'
                          bool>::type=false>
                                      ^~~~~
/usr/include/c++/7/bits/stl_pair.h:349:38: note: invalid template non-type parameter
/usr/include/c++/7/bits/stl_pair.h:341:12: note: candidate: template<class _U1, class _U2, typename std::enable_if<(_MoveConstructiblePair<_U1, _U2>() && _ImplicitlyMoveConvertiblePair<_U1, _U2>()), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(_U1&&, _U2&&)
  constexpr pair(_U1&& __x, _U2&& __y)
            ^~~~
/usr/include/c++/7/bits/stl_pair.h:341:12: note:   template argument deduction/substitution failed:
/usr/include/c++/7/bits/stl_pair.h:340:38: error: no type named 'type' in 'struct std::enable_if<false, bool>'
                          bool>::type=true>
                                      ^~~~
/usr/include/c++/7/bits/stl_pair.h:340:38: note: invalid template non-type parameter
/usr/include/c++/7/bits/stl_pair.h:332:17: note: candidate: template<class _U2, typename std::enable_if<_CopyMovePair<false, const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, _U2>(), bool>::type <anonymous> > std::pair<_T1, _T2>::pair(const _T1&, _U2&&)
        explicit pair(const _T1& __x, _U2&& __y)
                 ^~~~
/usr/include/c++/7/bits/stl_pair.h:332:17: note:   template argument deduction/substitution failed:
/usr/include/c++/7/bits/stl_pair.h:331:38: error: no type named 'type' in 'struct std::enable_if<false, bool>'
                          bool>::type=false>
                                      ^~~~~
/usr/include/c++/7/bits/stl_pair.h:331:38: note: invalid template non-type parameter
/usr/include/c++/7/bits/stl_pair.h:325:18: note: candidate: template<class _U2, typename std::enable_if<_CopyMovePair<true, const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, _U2>(), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(const _T1&, _U2&&)
        constexpr pair(const _T1& __x, _U2&& __y)
                  ^~~~
/usr/include/c++/7/bits/stl_pair.h:325:18: note:   template argument deduction/substitution failed:
/usr/include/c++/7/bits/stl_pair.h:324:38: error: no type named 'type' in 'struct std::enable_if<false, bool>'
                          bool>::type=true>
                                      ^~~~
/usr/include/c++/7/bits/stl_pair.h:324:38: note: invalid template non-type parameter
/usr/include/c++/7/bits/stl_pair.h:318:27: note: candidate: template<class _U1, typename std::enable_if<_MoveCopyPair<false, _U1, peg::Definition>(), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(_U1&&, const _T2&)
        explicit constexpr pair(_U1&& __x, const _T2& __y)
                           ^~~~
/usr/include/c++/7/bits/stl_pair.h:318:27: note:   template argument deduction/substitution failed:
In file included from /usr/include/x86_64-linux-gnu/c++/7/bits/c++allocator.h:33:0,
                 from /usr/include/c++/7/bits/allocator.h:46,
                 from /usr/include/c++/7/string:41,
                 from /home/workspace/test/catch.hh:251,
                 from /home/workspace/test/test.cc:3:
/usr/include/c++/7/ext/new_allocator.h:136:4: note:   cannot convert 'std::forward<peg::Reference&>((* & __args#1))' (type 'peg::Reference') to type 'const peg::Definition&'
  { ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/include/c++/7/bits/stl_algobase.h:64:0,
                 from /usr/include/c++/7/bits/char_traits.h:39,
                 from /usr/include/c++/7/string:40,
                 from /home/workspace/test/catch.hh:251,
                 from /home/workspace/test/test.cc:3:
/usr/include/c++/7/bits/stl_pair.h:311:18: note: candidate: template<class _U1, typename std::enable_if<_MoveCopyPair<true, _U1, peg::Definition>(), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(_U1&&, const _T2&)
        constexpr pair(_U1&& __x, const _T2& __y)
                  ^~~~
/usr/include/c++/7/bits/stl_pair.h:311:18: note:   template argument deduction/substitution failed:
In file included from /usr/include/x86_64-linux-gnu/c++/7/bits/c++allocator.h:33:0,
                 from /usr/include/c++/7/bits/allocator.h:46,
                 from /usr/include/c++/7/string:41,
                 from /home/workspace/test/catch.hh:251,
                 from /home/workspace/test/test.cc:3:
/usr/include/c++/7/ext/new_allocator.h:136:4: note:   cannot convert 'std::forward<peg::Reference&>((* & __args#1))' (type 'peg::Reference') to type 'const peg::Definition&'
  { ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/include/c++/7/bits/stl_algobase.h:64:0,
                 from /usr/include/c++/7/bits/char_traits.h:39,
                 from /usr/include/c++/7/string:40,
                 from /home/workspace/test/catch.hh:251,
                 from /home/workspace/test/test.cc:3:
/usr/include/c++/7/bits/stl_pair.h:304:17: note: candidate: std::pair<_T1, _T2>::pair(std::pair<_T1, _T2>&&) [with _T1 = const std::__cxx11::basic_string<char>; _T2 = peg::Definition]
       constexpr pair(pair&&) = default;
                 ^~~~
/usr/include/c++/7/bits/stl_pair.h:304:17: note:   candidate expects 1 argument, 2 provided
/usr/include/c++/7/bits/stl_pair.h:303:17: note: candidate: std::pair<_T1, _T2>::pair(const std::pair<_T1, _T2>&) [with _T1 = const std::__cxx11::basic_string<char>; _T2 = peg::Definition]
       constexpr pair(const pair&) = default;
                 ^~~~
/usr/include/c++/7/bits/stl_pair.h:303:17: note:   candidate expects 1 argument, 2 provided
/usr/include/c++/7/bits/stl_pair.h:300:21: note: candidate: template<class _U1, class _U2, typename std::enable_if<(std::_PCC<((! std::is_same<const std::__cxx11::basic_string<char>, _U1>::value) || (! std::is_same<peg::Definition, _U2>::value)), const std::__cxx11::basic_string<char>, peg::Definition>::_ConstructiblePair<_U1, _U2>() && (! std::_PCC<((! std::is_same<const std::__cxx11::basic_string<char>, _U1>::value) || (! std::is_same<peg::Definition, _U2>::value)), const std::__cxx11::basic_string<char>, peg::Definition>::_ImplicitlyConvertiblePair<_U1, _U2>())), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(const std::pair<_U1, _U2>&)
  explicit constexpr pair(const pair<_U1, _U2>& __p)
                     ^~~~
/usr/include/c++/7/bits/stl_pair.h:300:21: note:   template argument deduction/substitution failed:
In file included from /usr/include/x86_64-linux-gnu/c++/7/bits/c++allocator.h:33:0,
                 from /usr/include/c++/7/bits/allocator.h:46,
                 from /usr/include/c++/7/string:41,
                 from /home/workspace/test/catch.hh:251,
                 from /home/workspace/test/test.cc:3:
/usr/include/c++/7/ext/new_allocator.h:136:4: note:   'const std::__cxx11::basic_string<char>' is not derived from 'const std::pair<_T1, _T2>'
  { ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/include/c++/7/bits/stl_algobase.h:64:0,
                 from /usr/include/c++/7/bits/char_traits.h:39,
                 from /usr/include/c++/7/string:40,
                 from /home/workspace/test/catch.hh:251,
                 from /home/workspace/test/test.cc:3:
/usr/include/c++/7/bits/stl_pair.h:291:19: note: candidate: template<class _U1, class _U2, typename std::enable_if<(std::_PCC<((! std::is_same<const std::__cxx11::basic_string<char>, _U1>::value) || (! std::is_same<peg::Definition, _U2>::value)), const std::__cxx11::basic_string<char>, peg::Definition>::_ConstructiblePair<_U1, _U2>() && std::_PCC<((! std::is_same<const std::__cxx11::basic_string<char>, _U1>::value) || (! std::is_same<peg::Definition, _U2>::value)), const std::__cxx11::basic_string<char>, peg::Definition>::_ImplicitlyConvertiblePair<_U1, _U2>()), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(const std::pair<_U1, _U2>&)
         constexpr pair(const pair<_U1, _U2>& __p)
                   ^~~~
/usr/include/c++/7/bits/stl_pair.h:291:19: note:   template argument deduction/substitution failed:
In file included from /usr/include/x86_64-linux-gnu/c++/7/bits/c++allocator.h:33:0,
                 from /usr/include/c++/7/bits/allocator.h:46,
                 from /usr/include/c++/7/string:41,
                 from /home/workspace/test/catch.hh:251,
                 from /home/workspace/test/test.cc:3:
/usr/include/c++/7/ext/new_allocator.h:136:4: note:   'const std::__cxx11::basic_string<char>' is not derived from 'const std::pair<_T1, _T2>'
  { ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/include/c++/7/bits/stl_algobase.h:64:0,
                 from /usr/include/c++/7/bits/char_traits.h:39,
                 from /usr/include/c++/7/string:40,
                 from /home/workspace/test/catch.hh:251,
                 from /home/workspace/test/test.cc:3:
/usr/include/c++/7/bits/stl_pair.h:269:26: note: candidate: template<class _U1, class _U2, typename std::enable_if<(_ConstructiblePair<_U1, _U2>() && (! _ImplicitlyConvertiblePair<_U1, _U2>())), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(const _T1&, const _T2&)
       explicit constexpr pair(const _T1& __a, const _T2& __b)
                          ^~~~
/usr/include/c++/7/bits/stl_pair.h:269:26: note:   template argument deduction/substitution failed:
In file included from /usr/include/x86_64-linux-gnu/c++/7/bits/c++allocator.h:33:0,
                 from /usr/include/c++/7/bits/allocator.h:46,
                 from /usr/include/c++/7/string:41,
                 from /home/workspace/test/catch.hh:251,
                 from /home/workspace/test/test.cc:3:
/usr/include/c++/7/ext/new_allocator.h:136:4: note:   cannot convert 'std::forward<peg::Reference&>((* & __args#1))' (type 'peg::Reference') to type 'const peg::Definition&'
  { ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/include/c++/7/bits/stl_algobase.h:64:0,
                 from /usr/include/c++/7/bits/char_traits.h:39,
                 from /usr/include/c++/7/string:40,
                 from /home/workspace/test/catch.hh:251,
                 from /home/workspace/test/test.cc:3:
/usr/include/c++/7/bits/stl_pair.h:260:17: note: candidate: template<class _U1, class _U2, typename std::enable_if<(_ConstructiblePair<_U1, _U2>() && _ImplicitlyConvertiblePair<_U1, _U2>()), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(const _T1&, const _T2&)
       constexpr pair(const _T1& __a, const _T2& __b)
                 ^~~~
/usr/include/c++/7/bits/stl_pair.h:260:17: note:   template argument deduction/substitution failed:
In file included from /usr/include/x86_64-linux-gnu/c++/7/bits/c++allocator.h:33:0,
                 from /usr/include/c++/7/bits/allocator.h:46,
                 from /usr/include/c++/7/string:41,
                 from /home/workspace/test/catch.hh:251,
                 from /home/workspace/test/test.cc:3:
/usr/include/c++/7/ext/new_allocator.h:136:4: note:   cannot convert 'std::forward<peg::Reference&>((* & __args#1))' (type 'peg::Reference') to type 'const peg::Definition&'
  { ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/include/c++/7/bits/stl_algobase.h:64:0,
                 from /usr/include/c++/7/bits/char_traits.h:39,
                 from /usr/include/c++/7/string:40,
                 from /home/workspace/test/catch.hh:251,
                 from /home/workspace/test/test.cc:3:
/usr/include/c++/7/bits/stl_pair.h:242:26: note: candidate: template<class _U1, class _U2, typename std::enable_if<std::__and_<std::is_default_constructible<_Tp>, std::is_default_constructible<_Dp>, std::__not_<std::__and_<std::__is_implicitly_default_constructible<_U1>, std::__is_implicitly_default_constructible<_U2> > > >::value, bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair()
       explicit constexpr pair()
                          ^~~~
/usr/include/c++/7/bits/stl_pair.h:242:26: note:   template argument deduction/substitution failed:
In file included from /usr/include/x86_64-linux-gnu/c++/7/bits/c++allocator.h:33:0,
                 from /usr/include/c++/7/bits/allocator.h:46,
                 from /usr/include/c++/7/string:41,
                 from /home/workspace/test/catch.hh:251,
                 from /home/workspace/test/test.cc:3:
/usr/include/c++/7/ext/new_allocator.h:136:4: note:   candidate expects 0 arguments, 2 provided
  { ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/include/c++/7/bits/stl_algobase.h:64:0,
                 from /usr/include/c++/7/bits/char_traits.h:39,
                 from /usr/include/c++/7/string:40,
                 from /home/workspace/test/catch.hh:251,
                 from /home/workspace/test/test.cc:3:
/usr/include/c++/7/bits/stl_pair.h:229:26: note: candidate: template<class _U1, class _U2, typename std::enable_if<std::__and_<std::__is_implicitly_default_constructible<_U1>, std::__is_implicitly_default_constructible<_U2> >::value, bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair()
       _GLIBCXX_CONSTEXPR pair()
                          ^~~~
/usr/include/c++/7/bits/stl_pair.h:229:26: note:   template argument deduction/substitution failed:
In file included from /usr/include/x86_64-linux-gnu/c++/7/bits/c++allocator.h:33:0,
                 from /usr/include/c++/7/bits/allocator.h:46,
                 from /usr/include/c++/7/string:41,
                 from /home/workspace/test/catch.hh:251,
                 from /home/workspace/test/test.cc:3:
/usr/include/c++/7/ext/new_allocator.h:136:4: note:   candidate expects 0 arguments, 2 provided
  { ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
test/CMakeFiles/test-main.dir/build.make:75: recipe for target 'test/CMakeFiles/test-main.dir/test.cc.o' failed
make[2]: *** [test/CMakeFiles/test-main.dir/test.cc.o] Error 1
CMakeFiles/Makefile2:119: recipe for target 'test/CMakeFiles/test-main.dir/all' failed
make[1]: *** [test/CMakeFiles/test-main.dir/all] Error 2
Makefile:100: recipe for target 'all' failed
make: *** [all] Error 2

  Closing container
[cpp_peglib] done
Elapsed: 17.98s
