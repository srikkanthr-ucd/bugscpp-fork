```cpp
static int str_format(bvm *vm)
{
    int top = be_top(vm);
    if (top > 0 && be_isstring(vm, 1)) {
        int index = 2;
        const char *format = be_tostring(vm, 1);
        pushstr(vm, "", 0);
        for (;;) {
            char mode[MAX_FORMAT_MODE];
            char buf[128];
            const char *p = strchr(format, '%');
            if (p == NULL) {
                break;
            }
            pushstr(vm, format, p - format);
            concat2(vm);
            p = get_mode(p + 1, mode);
            buf[0] = '\0';
            if (index <= top) {
                switch (*p) {
                case 'd': case 'i': case 'o':
                case 'u': case 'x': case 'X':
                    if (be_isint(vm, index)) {
                        mode_fixlen(mode, BE_INT_FMTLEN);
                        sprintf(buf, mode, be_toint(vm, index));
                    }
                    be_pushstring(vm, buf);
                    break;
                case 'e': case 'E':
                case 'f': case 'g': case 'G':
                    if (be_isnumber(vm, index)) {
                        sprintf(buf, mode, be_toreal(vm, index));
                    }
                    be_pushstring(vm, buf);
                    break;
                case 'c':
                    if (be_isint(vm, index)) {
                        sprintf(buf, "%c", (int)be_toint(vm, index));
                    }
                    be_pushstring(vm, buf);
                    break;
                case 's': {
                    const char *s = be_tostring(vm, index);
                    int len = be_strlen(vm, 2);
                    if (len > 100 && strlen(mode) == 2) {
                        be_pushvalue(vm, index);
                    } else {
                        sprintf(buf, mode, s);
                        be_pushstring(vm, buf);
                    }
                    break;
                }
                default: /* error */
                    be_raise(vm, "runtime_error", be_pushfstring(vm,
                        "invalid option '%%%c' to 'format'", *p));
                    break;
                }
            } else {
                be_raise(vm, "runtime_error", be_pushfstring(vm,
                    "bad argument #%d to 'format': no value", index));
            }
            concat2(vm);
            format = p + 1;
            ++index;
        }
        pushstr(vm, format, strlen(format));
        concat2(vm);
        be_return(vm);
    }
    be_return_nil(vm);
}
```

```json
{
  "error": [
    {
      "line_number": 9,
      "error_type": "Undefined variable",
      "explanation": "The variable 'index' is used without being declared or initialized."
    },
    {
      "line_number": 22,
      "error_type": "Off-by-one error",
      "explanation": "The condition 'index > top' should be replaced with 'index <= top' to correctly check if there are enough arguments for the format string."
    }
  ],
  "confidence": 0.5
}
```