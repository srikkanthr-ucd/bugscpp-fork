```cpp
static int str_format(bvm *vm)
{
    int top = be_top(vm);
    if (top > 0 && be_isstring(vm, 1)) {
        int index = 2;
        const char *format = be_tostring(vm, 1);
        pushstr(vm, "", 0);
        for (;;) {
            char mode[MAX_FORMAT_MODE];
            char buf[128];
            const char *p = strchr(format, '%');
            if (p == NULL) {
                break;
            }
            pushstr(vm, format, p - format);
            concat2(vm);
            p = get_mode(p + 1, mode);
            buf[0] = '\0';
            if (index > top) {
                be_raise(vm, "runtime_error", be_pushfstring(vm,
                    "bad argument #%d to 'format': no value", index));
            }
            switch (*p) {
            case 'd': case 'i': case 'o':
            case 'u': case 'x': case 'X':
                if (be_isint(vm, index)) {
                    mode_fixlen(mode, BE_INT_FMTLEN);
                    sprintf(buf, mode, be_toint(vm, index));
                } else if (be_isnumber(vm, index)) {
                    mode_fixlen(mode, BE_FLOAT_FMTLEN);
                    sprintf(buf, mode, be_toreal(vm, index));
                }
                be_pushstring(vm, buf);
                break;
            case 'e': case 'E':
            case 'f': case 'g': case 'G':
                if (be_isnumber(vm, index)) {
                    sprintf(buf, mode, be_toreal(vm, index));
                }
                be_pushstring(vm, buf);
                break;
            case 'c':
                if (be_isint(vm, index)) {
                    sprintf(buf, "%c", (int)be_toint(vm, index));
                }
                be_pushstring(vm, buf);
                break;
            case 's': {
                const char *s = be_tostring(vm, index);
                int len = be_strlen(vm, 2);
                if (len > 100 && strlen(mode) == 2) {
                    be_pushvalue(vm, index);
                } else {
                    sprintf(buf, mode, s);
                    be_pushstring(vm, buf);
                }
                break;
            }
            default: /* error */
                be_raise(vm, "runtime_error", be_pushfstring(vm,
                    "invalid option '%%%c' to 'format'", *p));
                break;
            }
            concat2(vm);
            format = p + 1;
            ++index;
        }
        pushstr(vm, format, strlen(format));
        concat2(vm);
        be_return(vm);
    }
    be_return_nil(vm);
}
```

```json
{
  "error": [
    {
      "line_number": 22,
      "error_type": "conversion_error",
      "explanation": "Implicitly converting `index` of type `int` to `double` while using the `sprintf` function with the `%f`, `%g`, and `%G` format specifiers."
    },
    {
      "line_number": 22,
      "error_type": "conversion_error",
      "explanation": "Implicitly converting `index` of type `int` to `long` while using the `sprintf` function with the `%d`, `%i`, `%o`, `%u`, `%x`, and `%X` format specifiers."
    }
  ],
  "confidence": 1
}
```